Inspecting 84 files
......CC....C......C......C....................C.CC.................................

Offenses:

app/controllers/admins_controller.rb:19:57: C: Rails/I18nLocaleTexts: Move locale texts to the locale files in the config/locales directory.
        format.html { redirect_to(accounts_url, notice: "You do not have access to this page. Contact your adminstrator for help.") }
                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/admins_controller.rb:35:62: C: Rails/I18nLocaleTexts: Move locale texts to the locale files in the config/locales directory.
          format.html { redirect_to(user_url(@user), notice: "User was successfully updated.") }
                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/admins_controller.rb:45:57: C: Rails/I18nLocaleTexts: Move locale texts to the locale files in the config/locales directory.
        format.html { redirect_to(accounts_url, notice: "You do not have access to that update action. Contact your adminstrator for help.") }
                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/admins_controller.rb:53:53: C: Rails/I18nLocaleTexts: Move locale texts to the locale files in the config/locales directory.
      format.html { redirect_to(users_path, notice: "User was successfully destroyed.") }
                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/admins_controller.rb:64:57: C: Rails/I18nLocaleTexts: Move locale texts to the locale files in the config/locales directory.
      format.html { redirect_to(user_url(user), notice: "Role has been successfully assigned to the user.") }
                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/application_controller.rb:14:151: C: Layout/LineLength: Line is too long. [271/150]
        if current_admin && !current_admin.is_approved? && (!(params[:controller] == "account" && params[:action] == "index") && !(params[:controller] == "admins/sessions" && params[:action] == "destroy") && !(params[:controller] == "home" && params[:action] == "index"))
                                                                                                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/application_controller.rb:15:41: C: Rails/I18nLocaleTexts: Move locale texts to the locale files in the config/locales directory.
                        flash[:alert] = "Your account is not approved yet. Please wait for approval or contact your Administrators."
                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/roles_controller.rb:26:60: C: Rails/I18nLocaleTexts: Move locale texts to the locale files in the config/locales directory.
        format.html { redirect_to(role_url(@role), notice: "Role was successfully created.") }
                                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/roles_controller.rb:39:60: C: Rails/I18nLocaleTexts: Move locale texts to the locale files in the config/locales directory.
        format.html { redirect_to(role_url(@role), notice: "Role was successfully updated.") }
                                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/roles_controller.rb:53:52: C: Rails/I18nLocaleTexts: Move locale texts to the locale files in the config/locales directory.
      format.html { redirect_to(roles_url, notice: "Role was successfully destroyed.") }
                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/users_helper.rb:2:9: C: Naming/PredicateName: Rename has_documents_signed? to documents_signed?.
    def has_documents_signed?
        ^^^^^^^^^^^^^^^^^^^^^
app/helpers/users_helper.rb:5:151: C: Layout/LineLength: Line is too long. [195/150]
              "Documents Not Yet Completed: #{current_admin.dues_completed ? '' : 'Dues '}#{current_admin.aor_completed ? '' : 'AOR '}#{current_admin.boat_waiver_completed ? '' : 'Boat Waiver '}"
                                                                                                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/helpers/users_helper.rb:12:9: C: Naming/PredicateName: Rename has_info_filled_out? to info_filled_out?.
    def has_info_filled_out?(user_id)
        ^^^^^^^^^^^^^^^^^^^^
app/helpers/users_helper.rb:17:151: C: Layout/LineLength: Line is too long. [194/150]
              "Info Not Yet Filled Out on Account: #{user_to_check.uin.present? ? '' : 'UIN '}#{user_to_check.address.present? ? '' : 'Address '}. Please fill this info out on the Account Page."
                                                                                                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/role.rb:2:5: C: Rails/HasManyOrHasOneDependent: Specify a :dependent option.
    has_many :set_role
    ^^^^^^^^
spec/integration/account_integration_spec.rb:8:5: C: RSpec/AnyInstance: Avoid stubbing using allow_any_instance_of.
    allow_any_instance_of(ApplicationController).to(receive(:authenticate_admin!).and_return(true))
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/account_integration_spec.rb:9:5: C: RSpec/AnyInstance: Avoid stubbing using allow_any_instance_of.
    allow_any_instance_of(ApplicationController).to(receive(:current_admin).and_return(admin))
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/members_integration_spec.rb:4:1: C: RSpec/MultipleDescribes: Do not use multiple top-level example groups - try to nest them.
RSpec.describe('Member Pages Without Access', type: :feature) do
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/members_integration_spec.rb:8:5: C: RSpec/AnyInstance: Avoid stubbing using allow_any_instance_of.
    allow_any_instance_of(ApplicationController).to(receive(:authenticate_admin!).and_return(true))
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/members_integration_spec.rb:9:5: C: RSpec/AnyInstance: Avoid stubbing using allow_any_instance_of.
    allow_any_instance_of(ApplicationController).to(receive(:current_admin).and_return(admin))
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/members_integration_spec.rb:22:5: C: RSpec/AnyInstance: Avoid stubbing using allow_any_instance_of.
    allow_any_instance_of(ApplicationController).to(receive(:authenticate_admin!).and_return(true))
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/members_integration_spec.rb:23:5: C: RSpec/AnyInstance: Avoid stubbing using allow_any_instance_of.
    allow_any_instance_of(ApplicationController).to(receive(:current_admin).and_return(chris))
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/receipt_integration_spec.rb:4:1: C: RSpec/MultipleDescribes: Do not use multiple top-level example groups - try to nest them.
RSpec.describe('Go to receipts page as treasurer', type: :feature) do
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/receipt_integration_spec.rb:8:5: C: RSpec/AnyInstance: Avoid stubbing using allow_any_instance_of.
    allow_any_instance_of(ApplicationController).to(receive(:authenticate_admin!).and_return(true))
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/receipt_integration_spec.rb:9:5: C: RSpec/AnyInstance: Avoid stubbing using allow_any_instance_of.
    allow_any_instance_of(ApplicationController).to(receive(:current_admin).and_return(admin))
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/receipt_integration_spec.rb:22:5: C: RSpec/AnyInstance: Avoid stubbing using allow_any_instance_of.
    allow_any_instance_of(ApplicationController).to(receive(:authenticate_admin!).and_return(true))
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/receipt_integration_spec.rb:23:5: C: RSpec/AnyInstance: Avoid stubbing using allow_any_instance_of.
    allow_any_instance_of(ApplicationController).to(receive(:current_admin).and_return(admin))
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/receipt_integration_spec.rb:36:5: C: RSpec/AnyInstance: Avoid stubbing using allow_any_instance_of.
    allow_any_instance_of(ApplicationController).to(receive(:authenticate_admin!).and_return(true))
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/receipt_integration_spec.rb:37:5: C: RSpec/AnyInstance: Avoid stubbing using allow_any_instance_of.
    allow_any_instance_of(ApplicationController).to(receive(:current_admin).and_return(admin))
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/receipt_integration_spec.rb:50:5: C: RSpec/AnyInstance: Avoid stubbing using allow_any_instance_of.
    allow_any_instance_of(ApplicationController).to(receive(:authenticate_admin!).and_return(true))
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/receipt_integration_spec.rb:51:5: C: RSpec/AnyInstance: Avoid stubbing using allow_any_instance_of.
    allow_any_instance_of(ApplicationController).to(receive(:current_admin).and_return(admin))
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/receipt_integration_spec.rb:73:3: C: RSpec/OverwritingSetup: admin is already defined.
  let(:admin) { Admin.create!(email: "chrispasala@tamu.edu", first_name: "chris", last_name: "pasala", role_id: 3, id: 2, is_approved: true, uin: 123, address: "123 place") }
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/receipt_integration_spec.rb:76:5: C: RSpec/AnyInstance: Avoid stubbing using allow_any_instance_of.
    allow_any_instance_of(ApplicationController).to(receive(:authenticate_admin!).and_return(true))
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/integration/receipt_integration_spec.rb:77:5: C: RSpec/AnyInstance: Avoid stubbing using allow_any_instance_of.
    allow_any_instance_of(ApplicationController).to(receive(:current_admin).and_return(admin))
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

84 files inspected, 34 offenses detected
